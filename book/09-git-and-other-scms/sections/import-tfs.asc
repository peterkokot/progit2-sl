[[r_git_tfs]]
==== TFS

(((TFS)))(((Importing, from TFS)))
Če vaša ekipa pretvarja svoj nadzor izvorne kode iz TFVC na Git, boste želeli najvišjo zvestobo pretvorbe, ki jo lahko dobite.
To pomeni, da medtem ko smo pokrili tako git-tfv in git-tf za sekcijo interoperabilnosti, bomo pokrili samo git-tfs za ta del, ker git-tfs podpira veje in to je nedopustno težko z uporabo git-tf.

[NOTE]
====
To je enosmerna pretvorba.
Rezultirajoči repozitorij Git se ne bo zmožen povezati z originalnim projektom TFVC.
====

Prva stvar, ki jo morate narediti je preslikati uporabniška imena.
TFVC je precej liberalen s tem, kar gre v polje avtorja za skupke sprememb, vendar Git želi človeku bralno ime in naslov e-pošte.
Te informacije lahko dobite iz klienta ukazne vrstice `tf`, sledeče:

[source,powershell]
----
PS> tf history $/myproject -recursive > AUTHORS_TMP
----

To vzame vse skupke sprememb v zgodovini projekta in jih da v datoteko AUTHORS_TMP, ki ga bomo procesirali za razširitev podatkov stolpca 'User' (2. stolpec).
Odprite datoteko in najdite kateri znaki se začnejo na koncu stolpca in zamenjajo v sledeči ukazni vrstici, parametri `11-20` ukaza `cut` s tistimi najdenimi:

[source,powershell]
----
PS> cat AUTHORS_TMP | cut -b 11-20 | tail -n+3 | uniq | sort > AUTHORS
----

Ukaz `cut` obdrži samo znake med 11 in 20 iz vsake vrstice.
Ukaz `tail` preskoči prvi dve vrstici, ki sta glavi polj in podčrtaji ASCII-art.
Rezultat vsega tega je preusmerjen na `uniq`, da eliminira duplikate in shrani datoteko imenovano `AUTHORS`.
Naslednji korak je ročen; da je git-tfs efektiven uporabite to datoteko, vsaka vrstica mora biti tega formata:

[source,text]
----
DOMAIN\username = User Name <email@address.com>
----

Del na levi je polje ``User'' iz TFVC in del na desni strani znaka za enakost je uporabniško ime, ki bo uporabljeno za pošiljanja Git.

Ko imate enkrat to datoteko, je naslednja stvar narediti polno kloniranje projekta TFVC, za katerega ste zainteresirani:

[source,powershell]
----
PS> git tfs clone --with-branches --authors=AUTHORS https://username.visualstudio.com/DefaultCollection $/project/Trunk project_git
----

Naslednje boste želeli počistiti sekcije `git-tfs-id` iz dna sporočila pošiljanja.
Sledeči ukaz bo to naredil:

[source,powershell]
----
PS> git filter-branch -f --msg-filter 'sed "s/^git-tfs-id:.*$//g"' -- --all
----

To uporablja ukaz `sed` iz okolja Git-bash, da zamenja katerokoli vrstico, ki se začne z ``git-tfs-id:'' s praznino, ki jo bo Git nato ignoriral.

Ko je enkrat to narejeno, ste pripravljeni, da dodate novo daljavo, potisnete navzgor vse vaše veje in vaša ekipa prične delati iz Git-a.
